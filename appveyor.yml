build_cloud: Ubuntu-OLL
image: Ubuntu

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

init:
  - sh: IMAGE_NAME="oll/archive-automation-dev:latest"
  - sh: CONTAINER_NAME="oll-archive-automation-dev-${APPVEYOR_PROJECT_SLUG}-${APPVEYOR_BUILD_NUMBER}"

before_build:
  - sh: >-
      if ! docker image inspect "${IMAGE_NAME}" > /dev/null 2>&1; then
      :;  echo "> IMAGE '$IMAGE_NAME' DOES NOT EXIST.";
      fi
  - sh: >-
      if docker inspect -f '{{.State.Status}}' "$CONTAINER_NAME" > /dev/null 2>&1; then
      :;  if [[ "$(docker inspect -f '{{.State.Status}}' "$CONTAINER_NAME")" == "running" ]]; then
      :;    echo "> CONTAINER ${CONTAINER_NAME} IS RUNNING!";
      :;    exit 1;
      :;  else
      :;    echo "> CONTAINER ${CONTAINER_NAME} ALREADY EXISTS; REMOVING IT";
      :;    docker rm $CONTAINER_NAME;
      :;  fi
      fi

build_script:
  - sh: >-
      docker run --rm \
        -e GH_SSH_PRIVATE_KEY="${GH_SSH_PRIVATE_KEY}" \
        -e APPVEYOR_REPO_NAME="${APPVEYOR_REPO_NAME}" \
        -e APPVEYOR_REPO_COMMIT="${APPVEYOR_REPO_COMMIT}" \
        -e PIP_INDEX_URL="${PIP_INDEX_URL}" \
        -e PIP_EXTRA_INDEX_URL="${PIP_EXTRA_INDEX_URL}" \
        -e PLATFORM_BRANCH="${PLATFORM_BRANCH}" \
        -e CLIENT_ID="${CLIENT_ID}" \
        -e TENANT_ID="${TENANT_ID}" \
        -e CLIENT_SECRET="${CLIENT_SECRET}" \
        -e PREPARE_BUILD_COMMAND="${PREPARE_BUILD_COMMAND}" \
        --name "${CONTAINER_NAME}" --cap-add SYS_ADMIN --privileged "${IMAGE_NAME}"

on_finish:
  - sh: docker rm $CONTAINER_NAME

notifications:
  - provider: Slack
    incoming_webhook:
      # post to the fire channel
      secure: KUaR+KAqX1jU0LF7kRDKHHGEAoItFzIHSjcreyRvnrRGMiSObCLPipW6KJUwvpl7CEWa8PP2LPzgiQssPcUWLCzoIVY+NvucTI+1NJ0H7GM=
    on_build_success: false
